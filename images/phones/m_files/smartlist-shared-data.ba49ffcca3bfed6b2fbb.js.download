(window.webpackJsonp=window.webpackJsonp||[]).push([["smartlist-shared-data"],{xffN:function(t,e,r){"use strict";r.r(e),r.d(e,"SmartListSharedActions",(function(){return n.a})),r.d(e,"SmartListSharedDataConnector",(function(){return s})),r.d(e,"SmartListSharedDataReducer",(function(){return d})),r.d(e,"ToolingInfo",(function(){return u}));var a,n=r("XzyE"),i=r("1w6q");!function(t){t[t.notStarted=0]="notStarted",t[t.initialized=1]="initialized",t[t.rendered=2]="rendered",t[t.unmounted=3]="unmounted"}(a||(a={}));class s extends i.a{constructor(t,e,r,a,n){super(t,e,r,a,n)}initSmartList(t){if(!t)return;const e=this.getSmartList(t);e&&e.initCallback&&e.currentState===a.notStarted&&(e.initCallback(),n.a.updateSmartListState.getActionSender(this).send(t,a.initialized))}renderSmartList(t,e){if(!t||!e)return;const r=this.getSmartList(t);r&&r.renderCallback&&(r.renderCallback(e),n.a.updateSmartListState.getActionSender(this).send(t,a.rendered))}unmountSmartList(t,e){if(!t||!e)return;const r=this.getSmartList(t);r&&r.unmountCallback&&r.currentState===a.rendered&&(r.unmountCallback(e),n.a.updateSmartListState.getActionSender(this).send(t,a.unmounted))}moveFocusToSmartList(t,e){const r=this.getSmartList(t);return!!(r&&r.focusCallback&&r.renderCallback&&r.currentState===a.rendered)&&(r.focusCallback(e),!0)}getSmartList(t){if(!t)return;const e=this.getCurrentState().smartLists;return e&&0!==e.size?e.get(t):void 0}}var o=r("05Au");class d{reduce(t,e){if(!t)return{smartLists:new Map};if(!e)return t;let r=!1;const i=Object.assign({},t);return r=r||o.a.handleAction(e,n.a.registerSmartList,t=>{t&&(i.smartLists.has(t.experienceType)||i.smartLists.set(t.experienceType,{badgeProps:void 0,currentState:a.notStarted,initCallback:t.initShouldFire,shouldPersist:void 0,renderCallback:t.renderShouldFire,unmountCallback:t.unmountShouldFire,focusCallback:t.focusShouldMove}))}),r=r||o.a.handleAction(e,n.a.persistSmartList,t=>{if(t){const e=i.smartLists.get(t);e&&(e.shouldPersist=!0)}}),r=r||o.a.handleAction(e,n.a.updateSmartListState,(t,e)=>{if(t){const r=i.smartLists.get(t);r&&(r.currentState=e)}}),r=r||o.a.handleAction(e,n.a.updateSmartListBadgeProps,(t,e)=>{if(t){const r=i.smartLists.get(t);r&&e&&(r.badgeProps=e)}}),r?i:t}}const u={experienceConfigSchema:{}}}}]);